import mongoose from 'mongoose';
import Order from './Models/Order.js';
import CourierAggregator from './Models/CourierAggregator.js';

async function checkDistribution() {
    await mongoose.connect('mongodb://127.0.0.1:27017/crm');

    console.log('üéØ –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–Ø –ó–ê–ö–ê–ó–û–í');
    console.log('===========================================');

    const couriers = await CourierAggregator.find({ onTheLine: true });

    console.log('üë• –ö–£–†–¨–ï–†–´ –ò –ò–• –ó–ê–ö–ê–ó–´:');
    for (const courier of couriers) {
        console.log(`\nüë§ ${courier.fullName}: ${courier.orders.length} –∑–∞–∫–∞–∑–æ–≤`);
        
        for (let i = 0; i < courier.orders.length; i++) {
            const orderData = courier.orders[i];
            if (orderData && orderData.clientAddress) {
                console.log(`   ${i+1}. ${orderData.clientAddress}`);
            }
        }
    }

    const today = new Date().toISOString().split('T')[0];
    const totalOrders = await Order.countDocuments({ 
        createdAt: { 
            $gte: new Date(today + 'T00:00:00.000Z'), 
            $lt: new Date(today + 'T23:59:59.999Z') 
        } 
    });
    
    const assignedOrders = await Order.countDocuments({ 
        createdAt: { 
            $gte: new Date(today + 'T00:00:00.000Z'), 
            $lt: new Date(today + 'T23:59:59.999Z') 
        },
        courierAggregator: { $exists: true }
    });

    console.log(`\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:`);
    console.log(`üì¶ –í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤: ${totalOrders}`);
    console.log(`‚úÖ –ù–∞–∑–Ω–∞—á–µ–Ω–æ: ${assignedOrders}`);
    console.log(`‚ùå –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ: ${totalOrders - assignedOrders}`);

    await mongoose.disconnect();
}

checkDistribution().catch(console.error); 