from ortools.constraint_solver import routing_enums_pb2
from ortools.constraint_solver import pywrapcp
import math
import sys
import json

input_data = json.load(sys.stdin)

# –û–±—â–∞—è —Ç–æ—á–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –¥–ª—è –≤—Å–µ—Ö –∫—É—Ä—å–µ—Ä–æ–≤
common_depot = {"id": "depot", "lat": 43.16857, "lon": 76.89642}

couriers = input_data["couriers"]
orders = input_data["orders"]
courier_restrictions = input_data["courier_restrictions"]

# –ü–†–û–í–ï–†–ö–ò –ù–ê –ö–û–†–†–ï–ö–¢–ù–û–°–¢–¨ –î–ê–ù–ù–´–•
print("=== –ü–†–û–í–ï–†–ö–ê –í–•–û–î–ù–´–• –î–ê–ù–ù–´–• ===", file=sys.stderr)

# –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∫—É—Ä—å–µ—Ä–æ–≤
# –§–æ—Ä–º–∞—Ç: "–∏–º—è_–∫—É—Ä—å–µ—Ä–∞": {"max_bottles_12": —á–∏—Å–ª–æ, "max_bottles_19": —á–∏—Å–ª–æ, "reason": "–ø—Ä–∏—á–∏–Ω–∞"}
COURIER_SPECIAL_RESTRICTIONS = {
    "–ë–µ–∫–µ—Ç": {
        "max_bottles_12": 0,  # –ó–∞–ø—Ä–µ—â–∞–µ–º –±—É—Ç—ã–ª–∫–∏ 12–ª
        "max_bottles_19": 100,  # –†–∞–∑—Ä–µ—à–∞–µ–º –±—É—Ç—ã–ª–∫–∏ 19–ª
        "reason": "–ö—É—Ä—å–µ—Ä –Ω–µ –º–æ–∂–µ—Ç –ø–µ—Ä–µ–≤–æ–∑–∏—Ç—å –±—É—Ç—ã–ª–∫–∏ 12–ª"
    },
    # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∏—Ö –∫—É—Ä—å–µ—Ä–æ–≤:
    # "–í–∞—Å–∏–ª–∏–π": {
    #     "max_bottles_12": 5,  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ 5 –±—É—Ç—ã–ª–æ–∫ 12–ª
    #     "max_bottles_19": 100,
    #     "reason": "–û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –¥–ª—è 12–ª –±—É—Ç—ã–ª–æ–∫"
    # }
}

print(f"=== –°–ü–ï–¶–ò–ê–õ–¨–ù–´–ï –û–ì–†–ê–ù–ò–ß–ï–ù–ò–Ø –ö–£–†–¨–ï–†–û–í ===", file=sys.stderr)
for courier_name, restrictions in COURIER_SPECIAL_RESTRICTIONS.items():
    print(f"–ö—É—Ä—å–µ—Ä {courier_name}: –º–∞–∫—Å. 12–ª={restrictions['max_bottles_12']}, –º–∞–∫—Å. 19–ª={restrictions['max_bottles_19']} ({restrictions['reason']})", file=sys.stderr)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—É—Ä—å–µ—Ä–æ–≤
valid_couriers = []
for i, courier in enumerate(couriers):
    if courier.get("lat") is not None and courier.get("lon") is not None:
        valid_couriers.append(courier)
        print(f"‚úÖ –ö—É—Ä—å–µ—Ä {courier['id']}: ({courier['lat']}, {courier['lon']})", file=sys.stderr)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã
        if courier.get("order") and courier["order"].get("status") == "onTheWay":
            active_order_id = courier["order"]["orderId"]
            print(f"   üöö –ê–∫—Ç–∏–≤–Ω—ã–π –∑–∞–∫–∞–∑: {active_order_id}", file=sys.stderr)
        else:
            print(f"   ‚è≥ –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤", file=sys.stderr)
    else:
        print(f"‚ùå –ö—É—Ä—å–µ—Ä {courier['id']}: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã", file=sys.stderr)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–∫–∞–∑—ã
valid_orders = []
active_order_ids = set()

# –°–æ–±–∏—Ä–∞–µ–º ID –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∫—É—Ä—å–µ—Ä–æ–≤ (–Ω–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –∑–∞–∫–∞–∑–æ–≤)
for courier in valid_couriers:
    if courier.get("order") and courier["order"].get("status") == "onTheWay":
        active_order_ids.add(courier["order"]["orderId"])

# –°–æ–∑–¥–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –∑–∞–ø–∏—Å–∏ –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤, —á—Ç–æ–±—ã –∞–ª–≥–æ—Ä–∏—Ç–º –º–æ–≥ –∏—Ö —É—á–µ—Å—Ç—å
active_orders_data = {}
for courier in valid_couriers:
    if courier.get("order") and courier["order"].get("status") == "onTheWay":
        active_order = courier["order"]
        active_orders_data[active_order["orderId"]] = {
            "id": active_order["orderId"],
            "lat": active_order["lat"],
            "lon": active_order["lon"],
            "bottles_12": active_order.get("bottles_12", 0),
            "bottles_19": active_order.get("bottles_19", 0),
            "status": "onTheWay"
        }

for i, order in enumerate(orders):
    if order.get("lat") is not None and order.get("lon") is not None:
        valid_orders.append(order)
        status_info = " (–ê–ö–¢–ò–í–ù–´–ô)" if order['id'] in active_order_ids else ""
        print(f"‚úÖ –ó–∞–∫–∞–∑ {order['id']}: ({order['lat']}, {order['lon']}){status_info}", file=sys.stderr)
    else:
        print(f"‚ùå –ó–∞–∫–∞–∑ {order['id']}: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã", file=sys.stderr)

# –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–º
for active_order_id, active_order_data in active_orders_data.items():
    valid_orders.append(active_order_data)
    print(f"‚úÖ –ê–∫—Ç–∏–≤–Ω—ã–π –∑–∞–∫–∞–∑ {active_order_id}: ({active_order_data['lat']}, {active_order_data['lon']}) (–ê–ö–¢–ò–í–ù–´–ô)", file=sys.stderr)

# –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–∫–∏ –≤–∞–ª–∏–¥–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
couriers = valid_couriers
orders = valid_orders

print(f"\n–í–∞–ª–∏–¥–Ω—ã–µ –∫—É—Ä—å–µ—Ä—ã: {len(couriers)}", file=sys.stderr)
print(f"–í–∞–ª–∏–¥–Ω—ã–µ –∑–∞–∫–∞–∑—ã: {len(orders)}", file=sys.stderr)
print(f"–ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã: {len(active_order_ids)}", file=sys.stderr)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
if len(couriers) == 0:
    print("‚ùå –û–®–ò–ë–ö–ê: –ù–µ—Ç –∫—É—Ä—å–µ—Ä–æ–≤ —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏!", file=sys.stderr)
    print("[]", file=sys.stdout)
    sys.exit(0)

if len(orders) == 0:
    print("‚ùå –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –ù–µ—Ç –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è!", file=sys.stderr)
    print("[]", file=sys.stdout)
    sys.exit(0)

print("‚úÖ –î–∞–Ω–Ω—ã–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é...", file=sys.stderr)

# –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫—É—Ä—å–µ—Ä–∞—Ö –∏ –∏—Ö –æ–±—â–µ–π –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
print("\n=== –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ö–£–†–¨–ï–†–ê–• ===", file=sys.stderr)
for courier in couriers:
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª–µ capacity –∏–ª–∏ –Ω—É–∂–Ω–æ —Å—á–∏—Ç–∞—Ç—å –∏–∑ capacity_12 –∏ capacity_19
    if 'capacity' in courier:
        total_capacity = courier.get("capacity", 0)
        capacity_12 = courier.get("capacity_12", 0)
        capacity_19 = courier.get("capacity_19", 0)
    else:
        capacity_12 = courier.get("capacity_12", 0)
        capacity_19 = courier.get("capacity_19", 0)
        total_capacity = capacity_12 + capacity_19
    
    print(f"–ö—É—Ä—å–µ—Ä {courier['id']}: –æ–±—â–∞—è –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å = {total_capacity} –±—É—Ç—ã–ª–æ–∫", file=sys.stderr)

# –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–∞—Ö
print("\n=== –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ó–ê–ö–ê–ó–ê–• ===", file=sys.stderr)
for order in orders:
    bottles_12 = order.get("bottles_12") or 0
    bottles_19 = order.get("bottles_19") or 0
    total_bottles = bottles_12 + bottles_19
    status_info = " (–ê–ö–¢–ò–í–ù–´–ô)" if order['id'] in active_order_ids else ""
    print(f"–ó–∞–∫–∞–∑ {order['id']}: {bottles_12} x 12–ª + {bottles_19} x 19–ª = {total_bottles} –±—É—Ç—ã–ª–æ–∫{status_info}", file=sys.stderr)

print("–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–∞ –∫—É—Ä—å–µ—Ä–æ–≤:", file=sys.stderr)
for order_id, allowed_courier_ids in courier_restrictions.items():
    if not allowed_courier_ids:
        print(f"  {order_id}: –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è", file=sys.stderr)
    else:
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º ID –∫—É—Ä—å–µ—Ä–æ–≤ –≤ –∏—Ö –∏–º–µ–Ω–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        courier_names = []
        for courier_id in allowed_courier_ids:
            # –ò—â–µ–º –∫—É—Ä—å–µ—Ä–∞ –ø–æ ID (–º–æ–∂–µ—Ç –±—ã—Ç—å ObjectId –∏–ª–∏ –∏–º—è)
            found_courier = None
            for courier in couriers:
                if str(courier.get('id', '')) == str(courier_id):
                    found_courier = courier
                    break
            
            if found_courier:
                courier_names.append(found_courier['id'])
            else:
                # –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ ID, –≤–æ–∑–º–æ–∂–Ω–æ —ç—Ç–æ —É–∂–µ –∏–º—è –∫—É—Ä—å–µ—Ä–∞
                courier_names.append(str(courier_id))
        
        print(f"  {order_id}: —Ç–æ–ª—å–∫–æ {', '.join(courier_names)}", file=sys.stderr)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏
print("\n=== –ü–†–û–í–ï–†–ö–ê –°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–ò –ê–ö–¢–ò–í–ù–´–• –ó–ê–ö–ê–ó–û–í –° –û–ì–†–ê–ù–ò–ß–ï–ù–ò–Ø–ú–ò ===", file=sys.stderr)
for courier in couriers:
    if courier.get("order") and courier["order"].get("status") == "onTheWay":
        active_order_id = courier["order"]["orderId"]
        courier_id = courier["id"]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è —ç—Ç–æ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞
        if active_order_id in courier_restrictions:
            allowed_courier_ids = courier_restrictions[active_order_id]
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–∑—Ä–µ—à–µ–Ω –ª–∏ —ç—Ç–æ—Ç –∫—É—Ä—å–µ—Ä –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞
            courier_allowed = False
            for allowed_id in allowed_courier_ids:
                if str(courier_id) == str(allowed_id):
                    courier_allowed = True
                    break
            
            if not courier_allowed:
                print(f"üö´ –ö–û–ù–§–õ–ò–ö–¢: –ö—É—Ä—å–µ—Ä {courier_id} –¥–æ–ª–∂–µ–Ω –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –∑–∞–∫–∞–∑ {active_order_id}, –Ω–æ –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π!", file=sys.stderr)
                print(f"   –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –∫—É—Ä—å–µ—Ä—ã: {allowed_courier_ids}", file=sys.stderr)
                print(f"   –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –î–æ–±–∞–≤–ª—è–µ–º –∫—É—Ä—å–µ—Ä–∞ {courier_id} –≤ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –¥–ª—è –∑–∞–∫–∞–∑–∞ {active_order_id}", file=sys.stderr)
                
                # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞–∑—Ä–µ—à–∞–µ–º –∫—É—Ä—å–µ—Ä—É –≤—ã–ø–æ–ª–Ω–∏—Ç—å –µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã–π –∑–∞–∫–∞–∑
                courier_restrictions[active_order_id].append(courier_id)
            else:
                print(f"‚úÖ –ö—É—Ä—å–µ—Ä {courier_id} —Ä–∞–∑—Ä–µ—à–µ–Ω –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞ {active_order_id}", file=sys.stderr)
        else:
            print(f"‚úÖ –ê–∫—Ç–∏–≤–Ω—ã–π –∑–∞–∫–∞–∑ {active_order_id} –∫—É—Ä—å–µ—Ä–∞ {courier_id} –Ω–µ –∏–º–µ–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π", file=sys.stderr)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç—å –±—É—Ç—ã–ª–æ–∫ –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
print("\n=== –ü–†–û–í–ï–†–ö–ê –î–û–°–¢–ê–¢–û–ß–ù–û–°–¢–ò –ë–£–¢–´–õ–û–ö –î–õ–Ø –ê–ö–¢–ò–í–ù–´–• –ó–ê–ö–ê–ó–û–í ===", file=sys.stderr)
for courier in couriers:
    if courier.get("order") and courier["order"].get("status") == "onTheWay":
        active_order_id = courier["order"]["orderId"]
        courier_id = courier["id"]
        
        # –ù–∞—Ö–æ–¥–∏–º –∞–∫—Ç–∏–≤–Ω—ã–π –∑–∞–∫–∞–∑ –≤ —Å–ø–∏—Å–∫–µ –∑–∞–∫–∞–∑–æ–≤
        active_order = next((o for o in orders if o["id"] == active_order_id), None)
        if active_order:
            required_12 = active_order.get("bottles_12", 0)
            required_19 = active_order.get("bottles_19", 0)
            available_12 = courier.get("capacity_12", 0)
            available_19 = courier.get("capacity_19", 0)
            
            print(f"–ö—É—Ä—å–µ—Ä {courier_id} - –∞–∫—Ç–∏–≤–Ω—ã–π –∑–∞–∫–∞–∑ {active_order_id}:", file=sys.stderr)
            print(f"  –¢—Ä–µ–±—É–µ—Ç—Å—è: 12–ª={required_12}, 19–ª={required_19}", file=sys.stderr)
            print(f"  –î–æ—Å—Ç—É–ø–Ω–æ: 12–ª={available_12}, 19–ª={available_19}", file=sys.stderr)
            
            if available_12 < required_12 or available_19 < required_19:
                print(f"  ‚ö†Ô∏è  –ù–ï–î–û–°–¢–ê–¢–û–ß–ù–û –ë–£–¢–´–õ–û–ö! –ö—É—Ä—å–µ—Ä –Ω–µ –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –∑–∞–∫–∞–∑", file=sys.stderr)
                print(f"  üí° –†–ï–®–ï–ù–ò–ï: –ö—É—Ä—å–µ—Ä –¥–æ–ª–∂–µ–Ω –¥–æ–µ—Ö–∞—Ç—å –¥–æ –±–∞–∑—ã –∏ –≤–∑—è—Ç—å –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –±—É—Ç—ã–ª–∫–∏", file=sys.stderr)
                
                # –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –†–ï–®–ï–ù–ò–ï: –û–±–Ω—É–ª—è–µ–º –±—É—Ç—ã–ª–∫–∏ —É –∫—É—Ä—å–µ—Ä–∞, —á—Ç–æ–±—ã –æ–Ω —Å—Ç–∞–ª "–ø—É—Å—Ç—ã–º"
                # –∏ –º–æ–≥ –≤–∑—è—Ç—å –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –±—É—Ç—ã–ª–∫–∏ —Å –±–∞–∑—ã
                print(f"  üîÑ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü–æ–º–µ—á–∞–µ–º –∫—É—Ä—å–µ—Ä–∞ {courier_id} –∫–∞–∫ 'empty' –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø–∞—Å–æ–≤", file=sys.stderr)
                courier["capacity_12"] = 0
                courier["capacity_19"] = 0
                print(f"  ‚úÖ –ö—É—Ä—å–µ—Ä {courier_id} —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç –≤–∑—è—Ç—å –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –±—É—Ç—ã–ª–∫–∏ —Å –±–∞–∑—ã", file=sys.stderr)
            else:
                print(f"  ‚úÖ –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±—É—Ç—ã–ª–æ–∫ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞", file=sys.stderr)

# –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –ª–æ–∫–∞—Ü–∏–π: –¥–µ–ø–æ + –∫—É—Ä—å–µ—Ä—ã + –∑–∞–∫–∞–∑—ã
locations = [common_depot] + couriers + orders

def haversine(lat1, lon1, lat2, lon2):
    R = 6371  # –†–∞–¥–∏—É—Å –ó–µ–º–ª–∏ –≤ –∫–º
    d_lat = math.radians(lat2 - lat1)
    d_lon = math.radians(lon2 - lon1)
    a = (
        math.sin(d_lat/2) ** 2 +
        math.cos(math.radians(lat1)) *
        math.cos(math.radians(lat2)) *
        math.sin(d_lon/2) ** 2
    )
    return R * 2 * math.atan2(math.sqrt(a), math.sqrt(1 - a))

# –°—Ç—Ä–æ–∏–º –º–∞—Ç—Ä–∏—Ü—É —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–π
distance_matrix = []
for from_node in locations:
    row = []
    for to_node in locations:
        row.append(int(haversine(from_node["lat"], from_node["lon"], to_node["lat"], to_node["lon"]) * 1000))  # –º–µ—Ç—Ä—ã
    distance_matrix.append(row)

num_couriers = len(couriers)
num_orders = len(orders)
num_locations = len(locations)

print(f"\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—É—Ä—å–µ—Ä–æ–≤: {num_couriers}", file=sys.stderr)
print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤: {num_orders}", file=sys.stderr)
print(f"–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–æ–∫–∞—Ü–∏–π: {num_locations}", file=sys.stderr)

# –û–¢–ö–†–´–¢–´–ï –ú–ê–†–®–†–£–¢–´: –°–æ–∑–¥–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –∫–æ–Ω–µ—á–Ω—ã–µ —Ç–æ—á–∫–∏
print("\n=== –ù–ê–°–¢–†–û–ô–ö–ê –û–¢–ö–†–´–¢–´–• –ú–ê–†–®–†–£–¢–û–í ===", file=sys.stderr)
starts = list(range(1, num_couriers + 1))

# –í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –∫–æ–Ω–µ—á–Ω—ã–µ —Ç–æ—á–∫–∏ –ø–æ–∑–≤–æ–ª—è—é—Ç –∫—É—Ä—å–µ—Ä–∞–º –∑–∞–∫–∞–Ω—á–∏–≤–∞—Ç—å –º–∞—Ä—à—Ä—É—Ç –≤ –ª—é–±–æ–º –∑–∞–∫–∞–∑–µ
virtual_ends = []
for vehicle_id in range(num_couriers):
    virtual_end_index = num_locations + vehicle_id
    virtual_ends.append(virtual_end_index)

# –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–æ–∫–∞—Ü–∏–π –≤–∫–ª—é—á–∞—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –∫–æ–Ω–µ—á–Ω—ã–µ —Ç–æ—á–∫–∏
total_locations = num_locations + num_couriers

print(f"–°—Ç–∞—Ä—Ç–æ–≤—ã–µ —Ç–æ—á–∫–∏ –∫—É—Ä—å–µ—Ä–æ–≤: {starts}", file=sys.stderr)
print(f"–í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –∫–æ–Ω–µ—á–Ω—ã–µ —Ç–æ—á–∫–∏: {virtual_ends}", file=sys.stderr)
print(f"–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–æ–∫–∞—Ü–∏–π (—Å –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–º–∏): {total_locations}", file=sys.stderr)

manager = pywrapcp.RoutingIndexManager(total_locations, num_couriers, starts, virtual_ends)
routing = pywrapcp.RoutingModel(manager)

# –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–π –¥–ª—è –æ—Ç–∫—Ä—ã—Ç—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ —Å —É—á–µ—Ç–æ–º –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
def distance_callback(from_index, to_index):
    try:
        if from_index < 0 or to_index < 0:
            return 999999
        
        from_node = manager.IndexToNode(from_index)
        to_node = manager.IndexToNode(to_index)
        
        # –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–µ—Ö–æ–¥ –∫ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π –∫–æ–Ω–µ—á–Ω–æ–π —Ç–æ—á–∫–µ - —Å—Ç–æ–∏–º–æ—Å—Ç—å 0
        if to_node >= num_locations:
            return 0
        
        # –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–µ—Ö–æ–¥ –æ—Ç –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π –∫–æ–Ω–µ—á–Ω–æ–π —Ç–æ—á–∫–∏ - –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º–æ
        if from_node >= num_locations:
            return 999999
        
        # –ë–∞–∑–æ–≤–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É —Ç–æ—á–∫–∞–º–∏
        return distance_matrix[from_node][to_node]
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ distance_callback: {e}", file=sys.stderr)
        return 999999

transit_callback_index = routing.RegisterTransitCallback(distance_callback)
routing.SetArcCostEvaluatorOfAllVehicles(transit_callback_index)

# –î–æ–±–∞–≤–ª—è–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è –∑–∞–∫–∞–∑–æ–≤
for order_idx in range(num_couriers + 1, num_locations):
    routing.AddDisjunction([manager.NodeToIndex(order_idx)], 10000)

# –ü—Ä–∏–º–µ–Ω—è–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–∞ –∫—É—Ä—å–µ—Ä–æ–≤ (—Ç–æ–ª—å–∫–æ –∏–∑ courier_restrictions)
for i, order in enumerate(orders):
    order_node_index = num_couriers + 1 + i
    order_routing_index = manager.NodeToIndex(order_node_index)
    
    if order['id'] in courier_restrictions:
        allowed_courier_ids = courier_restrictions[order['id']]
        if not allowed_courier_ids:
            routing.AddDisjunction([order_routing_index], 100000)
            print(f"–ó–∞–∫–∞–∑ {order['id']}: –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è", file=sys.stderr)
        else:
            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º ID –∫—É—Ä—å–µ—Ä–æ–≤ –≤ –∏—Ö –∏–Ω–¥–µ–∫—Å—ã
            allowed_courier_indices = []
            for courier_id in allowed_courier_ids:
                for j, courier in enumerate(couriers):
                    # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∫–∞–∫ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å ObjectId
                    if str(courier['id']) == str(courier_id):
                        allowed_courier_indices.append(j)
                        break
            
            if allowed_courier_indices:
                routing.SetAllowedVehiclesForIndex(allowed_courier_indices, order_routing_index)
                print(f"–ó–∞–∫–∞–∑ {order['id']}: —Ä–∞–∑—Ä–µ—à–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∫—É—Ä—å–µ—Ä–æ–≤ —Å –∏–Ω–¥–µ–∫—Å–∞–º–∏ {allowed_courier_indices}", file=sys.stderr)
            else:
                # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –Ω–∏ –æ–¥–Ω–æ–≥–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ –∫—É—Ä—å–µ—Ä–∞, –∏—Å–∫–ª—é—á–∞–µ–º –∑–∞–∫–∞–∑
                routing.AddDisjunction([order_routing_index], 100000)
                print(f"–ó–∞–∫–∞–∑ {order['id']}: –Ω–µ –Ω–∞–π–¥–µ–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –∫—É—Ä—å–µ—Ä–æ–≤, –∏—Å–∫–ª—é—á–µ–Ω", file=sys.stderr)

# –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –∫—É—Ä—å–µ—Ä–æ–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è—Ö
courier_capacities = []
courier_types = []  # –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º —Ç–∏–ø –∫—É—Ä—å–µ—Ä–∞: 'empty' –∏–ª–∏ 'loaded'

for courier in couriers:
    capacity_12 = courier.get("capacity_12", 0)
    capacity_19 = courier.get("capacity_19", 0)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–π –∑–∞–∫–∞–∑
    has_active_order = (courier.get("order") and courier["order"].get("status") == "onTheWay")
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∫—É—Ä—å–µ—Ä–∞ –ø–æ –Ω–∞–ª–∏—á–∏—é –±—É—Ç—ã–ª–æ–∫
    if capacity_12 == 0 and capacity_19 == 0:
        # –ö—É—Ä—å–µ—Ä –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø—É—Å—Ç–æ–π - –Ω—É–∂–Ω–æ –Ω–∞–∑–Ω–∞—á–∏—Ç—å –∑–∞–∫–∞–∑—ã –∏ –ø–æ–∫–∞–∑–∞—Ç—å —Å–∫–æ–ª—å–∫–æ –≤–∑—è—Ç—å
        courier_type = 'empty'
        total_capacity = courier.get("capacity", 100)  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –¥–ª—è –ø—É—Å—Ç–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞
        print(f"–ö—É—Ä—å–µ—Ä {courier['id']}: –ü–£–°–¢–û–ô (–Ω–µ—Ç –±—É—Ç—ã–ª–æ–∫), –º–æ–∂–Ω–æ –Ω–∞–∑–Ω–∞—á–∏—Ç—å –ª—é–±—ã–µ –∑–∞–∫–∞–∑—ã", file=sys.stderr)
    else:
        # –ö—É—Ä—å–µ—Ä —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω - –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–º–µ—é—â–∏–µ—Å—è –±—É—Ç—ã–ª–∫–∏
        courier_type = 'loaded'
        total_capacity = capacity_12 + capacity_19
        
        if has_active_order:
            active_order_id = courier["order"]["orderId"]
            active_order = next((o for o in orders if o["id"] == active_order_id), None)
            if active_order:
                required_12 = active_order.get("bottles_12", 0)
                required_19 = active_order.get("bottles_19", 0)
                
                if capacity_12 >= required_12 and capacity_19 >= required_19:
                    print(f"–ö—É—Ä—å–µ—Ä {courier['id']}: –ó–ê–ì–†–£–ñ–ï–ù–ù–´–ô, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±—É—Ç—ã–ª–æ–∫ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞", file=sys.stderr)
                else:
                    print(f"–ö—É—Ä—å–µ—Ä {courier['id']}: –ó–ê–ì–†–£–ñ–ï–ù–ù–´–ô, –ù–û –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±—É—Ç—ã–ª–æ–∫ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞ (—Ç—Ä–µ–±—É–µ—Ç—Å—è 12–ª={required_12}, 19–ª={required_19}, –∏–º–µ–µ—Ç—Å—è 12–ª={capacity_12}, 19–ª={capacity_19})", file=sys.stderr)
                    print(f"  ‚Üí –ë—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–º–µ—é—â–∏–µ—Å—è –±—É—Ç—ã–ª–∫–∏, –≤–æ–∑–º–æ–∂–Ω–æ –º–∞—Ä—à—Ä—É—Ç –±—É–¥–µ—Ç –¥–æ–ª—å—à–µ", file=sys.stderr)
            else:
                print(f"–ö—É—Ä—å–µ—Ä {courier['id']}: –ó–ê–ì–†–£–ñ–ï–ù–ù–´–ô, –∞–∫—Ç–∏–≤–Ω—ã–π –∑–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω", file=sys.stderr)
        else:
            print(f"–ö—É—Ä—å–µ—Ä {courier['id']}: –ó–ê–ì–†–£–ñ–ï–ù–ù–´–ô, –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤", file=sys.stderr)
    
    courier_capacities.append(total_capacity)
    courier_types.append(courier_type)
    
    print(f"–ö—É—Ä—å–µ—Ä {courier['id']}: —Ç–∏–ø={courier_type}, –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å={total_capacity} –±—É—Ç—ã–ª–æ–∫ (12–ª={capacity_12}, 19–ª={capacity_19})", file=sys.stderr)

# –î–æ–±–∞–≤–ª—è–µ–º –∂–µ—Å—Ç–∫–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
print("\n=== –ù–ê–°–¢–†–û–ô–ö–ê –û–ì–†–ê–ù–ò–ß–ï–ù–ò–ô –î–õ–Ø –ê–ö–¢–ò–í–ù–´–• –ó–ê–ö–ê–ó–û–í ===", file=sys.stderr)
for vehicle_id, courier in enumerate(couriers):
    if courier.get("order") and courier["order"].get("status") == "onTheWay":
        active_order_id = courier["order"]["orderId"]
        
        # –ù–∞—Ö–æ–¥–∏–º –∏–Ω–¥–µ–∫—Å –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞
        active_order_index = None
        for i, order in enumerate(orders):
            if order["id"] == active_order_id:
                active_order_index = num_couriers + 1 + i
                break
        
        if active_order_index is not None:
            active_order_routing_index = manager.NodeToIndex(active_order_index)
            
            # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –Ω–∞–∑–Ω–∞—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∑–∞–∫–∞–∑ —ç—Ç–æ–º—É –∫—É—Ä—å–µ—Ä—É
            routing.SetAllowedVehiclesForIndex([vehicle_id], active_order_routing_index)
            
            # –î–æ–±–∞–≤–ª—è–µ–º –≤—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
            routing.AddDisjunction([active_order_routing_index], 100000)  # –í—ã—Å–æ–∫–∏–π —à—Ç—Ä–∞—Ñ –∑–∞ –ø—Ä–æ–ø—É—Å–∫
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –∫—É—Ä—å–µ—Ä–∞
            courier_type = courier_types[vehicle_id]
            
            # –ñ–µ—Å—Ç–∫–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ: –∫—É—Ä—å–µ—Ä –¥–æ–ª–∂–µ–Ω —Å–Ω–∞—á–∞–ª–∞ –µ—Ö–∞—Ç—å –∫ –∞–∫—Ç–∏–≤–Ω–æ–º—É –∑–∞–∫–∞–∑—É
            routing.solver().Add(
                routing.NextVar(routing.Start(vehicle_id)) == active_order_routing_index
            )
            
            print(f"‚úÖ –ö—É—Ä—å–µ—Ä {courier['id']} (—Ç–∏–ø: {courier_type}) –¥–æ–ª–∂–µ–Ω –°–ù–ê–ß–ê–õ–ê –¥–æ–µ—Ö–∞—Ç—å –¥–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞ {active_order_id}", file=sys.stderr)
            
            # –ú—è–≥–∫–æ–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
            print(f"‚úÖ –ö—É—Ä—å–µ—Ä {courier['id']} –¥–æ–ª–∂–µ–Ω –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –∑–∞–∫–∞–∑ {active_order_id}", file=sys.stderr)

# –ë–ê–õ–ê–ù–°–ò–†–û–í–ö–ê –ù–ê–ì–†–£–ó–ö–ò (—Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤)
new_orders_count = len([order for order in orders if order['id'] not in active_order_ids])
ideal_orders_per_courier = new_orders_count // num_couriers
remainder = new_orders_count % num_couriers

# –£–±–∏—Ä–∞–µ–º –∂–µ—Å—Ç–∫–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤
# –¢–µ–ø–µ—Ä—å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º –≥–∏–±–∫–æ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –±—É—Ç—ã–ª–æ–∫
min_orders_per_courier = 0  # –ú–∏–Ω–∏–º—É–º 0 –∑–∞–∫–∞–∑–æ–≤ - –∫—É—Ä—å–µ—Ä –º–æ–∂–µ—Ç –Ω–µ –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑—ã –µ—Å–ª–∏ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç
max_orders_per_courier = new_orders_count  # –ú–∞–∫—Å–∏–º—É–º - –≤—Å–µ –∑–∞–∫–∞–∑—ã (–µ—Å–ª–∏ —É –∫—É—Ä—å–µ—Ä–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)

print(f"\n–ù–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è: {new_orders_count}", file=sys.stderr)
print(f"–ì–∏–±–∫–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ: –º–∏–Ω–∏–º—É–º {min_orders_per_courier}, –º–∞–∫—Å–∏–º—É–º {max_orders_per_courier} –∑–∞–∫–∞–∑–æ–≤ –Ω–∞ –∫—É—Ä—å–µ—Ä–∞", file=sys.stderr)
print(f"–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –±—É—Ç—ã–ª–æ–∫, –∞ –Ω–µ –Ω–∞ —Ä–∞–≤–Ω–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –∑–∞–∫–∞–∑–æ–≤", file=sys.stderr)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –∑–∞–∫–∞–∑–æ–≤
def unit_callback(from_index, to_index):
    try:
        if from_index < 0 or to_index < 0:
            return 0
        
        from_node = manager.IndexToNode(from_index)
        to_node = manager.IndexToNode(to_index)
        
        # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–æ—Å–µ—â–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞
        if to_node >= num_couriers + 1 and to_node < num_locations:
            return 1
        return 0
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ unit_callback: {e}", file=sys.stderr)
        return 0

unit_callback_index = routing.RegisterTransitCallback(unit_callback)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –±—É—Ç—ã–ª–æ–∫ –≤ –∑–∞–∫–∞–∑–µ
def total_bottles_callback(from_index, to_index):
    try:
        if from_index < 0 or to_index < 0:
            return 0
        
        to_node = manager.IndexToNode(to_index)
        # –ï—Å–ª–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∑–∞–∫–∞–∑—É, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—É—Ç—ã–ª–æ–∫
        if to_node >= num_couriers + 1 and to_node < num_locations:
            order = orders[to_node - num_couriers - 1]
            bottles_12 = order.get("bottles_12") or 0
            bottles_19 = order.get("bottles_19") or 0
            return bottles_12 + bottles_19
        return 0
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ total_bottles_callback: {e}", file=sys.stderr)
        return 0

total_bottles_callback_index = routing.RegisterTransitCallback(total_bottles_callback)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –±—É—Ç—ã–ª–æ–∫ 12–ª –≤ –∑–∞–∫–∞–∑–µ
def bottles_12_callback(from_index, to_index):
    try:
        if from_index < 0 or to_index < 0:
            return 0
        
        to_node = manager.IndexToNode(to_index)
        # –ï—Å–ª–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∑–∞–∫–∞–∑—É, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—É—Ç—ã–ª–æ–∫ 12–ª
        if to_node >= num_couriers + 1 and to_node < num_locations:
            order = orders[to_node - num_couriers - 1]
            return order.get("bottles_12") or 0
        return 0
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ bottles_12_callback: {e}", file=sys.stderr)
        return 0

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –±—É—Ç—ã–ª–æ–∫ 19–ª –≤ –∑–∞–∫–∞–∑–µ
def bottles_19_callback(from_index, to_index):
    try:
        if from_index < 0 or to_index < 0:
            return 0
        
        to_node = manager.IndexToNode(to_index)
        # –ï—Å–ª–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∑–∞–∫–∞–∑—É, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—É—Ç—ã–ª–æ–∫ 19–ª
        if to_node >= num_couriers + 1 and to_node < num_locations:
            order = orders[to_node - num_couriers - 1]
            return order.get("bottles_19") or 0
        return 0
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ bottles_19_callback: {e}", file=sys.stderr)
        return 0

bottles_12_callback_index = routing.RegisterTransitCallback(bottles_12_callback)
bottles_19_callback_index = routing.RegisterTransitCallback(bottles_19_callback)

# –†–∞–∑–¥–µ–ª—å–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–∞ –±—É—Ç—ã–ª–∫–∏ 12–ª –∏ 19–ª –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞
courier_capacities_12 = []
courier_capacities_19 = []

for courier in couriers:
    capacity_12 = courier.get("capacity_12", 0)
    capacity_19 = courier.get("capacity_19", 0)
    courier_type = courier_types[couriers.index(courier)]
    courier_name = courier.get("id", "")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è –∫—É—Ä—å–µ—Ä–∞
    if courier_name in COURIER_SPECIAL_RESTRICTIONS:
        special_restrictions = COURIER_SPECIAL_RESTRICTIONS[courier_name]
        max_bottles_12 = special_restrictions["max_bottles_12"]
        max_bottles_19 = special_restrictions["max_bottles_19"]
        reason = special_restrictions["reason"]
        
        print(f"üö´ –°–ü–ï–¶–ò–ê–õ–¨–ù–û–ï –û–ì–†–ê–ù–ò–ß–ï–ù–ò–ï –¥–ª—è –∫—É—Ä—å–µ—Ä–∞ {courier_name}: {reason}", file=sys.stderr)
        print(f"   –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–µ –ª–∏–º–∏—Ç—ã: 12–ª‚â§{max_bottles_12}, 19–ª‚â§{max_bottles_19}", file=sys.stderr)
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ç–∏–ø–∞ –∫—É—Ä—å–µ—Ä–∞
        courier_capacities_12.append(max_bottles_12)
        courier_capacities_19.append(max_bottles_19)
        
        print(f"–ö—É—Ä—å–µ—Ä {courier_name}: –°–ü–ï–¶–ò–ê–õ–¨–ù–´–ï –û–ì–†–ê–ù–ò–ß–ï–ù–ò–Ø –ø—Ä–∏–º–µ–Ω–µ–Ω—ã", file=sys.stderr)
        
    elif courier_type == 'empty':
        # –ü—É—Å—Ç–æ–π –∫—É—Ä—å–µ—Ä - –º–æ–∂–µ—Ç –≤–∑—è—Ç—å –ª—é–±—ã–µ –±—É—Ç—ã–ª–∫–∏ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –æ–±—â–µ–π –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        total_capacity = courier.get("capacity", 100)
        courier_capacities_12.append(total_capacity)
        courier_capacities_19.append(total_capacity)
        print(f"–ö—É—Ä—å–µ—Ä {courier_name}: –ø—É—Å—Ç–æ–π, –º–æ–∂–µ—Ç –≤–∑—è—Ç—å –ª—é–±—ã–µ –±—É—Ç—ã–ª–∫–∏ –¥–æ {total_capacity}", file=sys.stderr)
    else:
        # –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π –∫—É—Ä—å–µ—Ä - –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–º–µ—é—â–∏–µ—Å—è –±—É—Ç—ã–ª–∫–∏
        courier_capacities_12.append(capacity_12)
        courier_capacities_19.append(capacity_19)
        print(f"–ö—É—Ä—å–µ—Ä {courier_name}: –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–º–µ—é—â–∏–µ—Å—è –±—É—Ç—ã–ª–∫–∏", file=sys.stderr)
    
    print(f"–ö—É—Ä—å–µ—Ä {courier_name}: –º–∞–∫—Å. 12–ª={courier_capacities_12[-1]}, –º–∞–∫—Å. 19–ª={courier_capacities_19[-1]}", file=sys.stderr)

# –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª—å–Ω—ã–µ —Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç–∏ –¥–ª—è –±—É—Ç—ã–ª–æ–∫ 12–ª –∏ 19–ª
bottles_12_dimension = routing.AddDimensionWithVehicleCapacity(
    bottles_12_callback_index,
    0,  # no slack
    courier_capacities_12,  # –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å 12–ª –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞
    True,
    "Bottles12"
)

bottles_19_dimension = routing.AddDimensionWithVehicleCapacity(
    bottles_19_callback_index,
    0,  # no slack
    courier_capacities_19,  # –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å 19–ª –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞
    True,
    "Bottles19"
)

# –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç–∏ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –º—è–≥–∫–∏—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
bottles_12_dimension_obj = routing.GetDimensionOrDie("Bottles12")
bottles_19_dimension_obj = routing.GetDimensionOrDie("Bottles19")

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º—è–≥–∫–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –∫—É—Ä—å–µ—Ä–æ–≤
print("\n=== –ù–ê–°–¢–†–û–ô–ö–ê –ú–Ø–ì–ö–ò–• –û–ì–†–ê–ù–ò–ß–ï–ù–ò–ô –ù–ê –¢–ò–ü–´ –ë–£–¢–´–õ–û–ö ===", file=sys.stderr)
for vehicle_id in range(num_couriers):
    courier = couriers[vehicle_id]
    courier_type = courier_types[vehicle_id]
    courier_name = courier.get("id", "")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
    if courier_name in COURIER_SPECIAL_RESTRICTIONS:
        special_restrictions = COURIER_SPECIAL_RESTRICTIONS[courier_name]
        max_bottles_12 = special_restrictions["max_bottles_12"]
        max_bottles_19 = special_restrictions["max_bottles_19"]
        
        # –î–ª—è –∫—É—Ä—å–µ—Ä–æ–≤ —Å–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∂–µ—Å—Ç–∫–∏–µ –ª–∏–º–∏—Ç—ã
        bottles_12_dimension_obj.SetCumulVarSoftUpperBound(
            routing.End(vehicle_id),
            max_bottles_12,
            10000  # –í—ã—Å–æ–∫–∏–π —à—Ç—Ä–∞—Ñ –∑–∞ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
        )
        
        bottles_19_dimension_obj.SetCumulVarSoftUpperBound(
            routing.End(vehicle_id),
            max_bottles_19,
            10000  # –í—ã—Å–æ–∫–∏–π —à—Ç—Ä–∞—Ñ –∑–∞ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
        )
        
        print(f"–ö—É—Ä—å–µ—Ä {courier_name}: –°–ü–ï–¶–ò–ê–õ–¨–ù–´–ï –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è 12–ª‚â§{max_bottles_12}, 19–ª‚â§{max_bottles_19} (–≤—ã—Å–æ–∫–∏–π —à—Ç—Ä–∞—Ñ)", file=sys.stderr)
        
    elif courier_type == 'loaded':
        # –î–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –∫—É—Ä—å–µ—Ä–æ–≤ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º—è–≥–∫–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ –∏–º–µ—é—â–∏–º—Å—è –±—É—Ç—ã–ª–∫–∞–º
        capacity_12 = courier.get("capacity_12", 0)
        capacity_19 = courier.get("capacity_19", 0)
        
        bottles_12_dimension_obj.SetCumulVarSoftUpperBound(
            routing.End(vehicle_id),
            capacity_12,
            1000  # –£–º–µ–Ω—å—à–∞–µ–º —à—Ç—Ä–∞—Ñ –∑–∞ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ
        )
        
        bottles_19_dimension_obj.SetCumulVarSoftUpperBound(
            routing.End(vehicle_id),
            capacity_19,
            1000  # –£–º–µ–Ω—å—à–∞–µ–º —à—Ç—Ä–∞—Ñ –∑–∞ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ
        )
        
        print(f"–ö—É—Ä—å–µ—Ä {courier_name} (–∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π): –º—è–≥–∫–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è 12–ª‚â§{capacity_12}, 19–ª‚â§{capacity_19}", file=sys.stderr)
    else:
        # –ü—É—Å—Ç–æ–π –∫—É—Ä—å–µ—Ä - –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –Ω–∞ —Ç–∏–ø—ã –±—É—Ç—ã–ª–æ–∫
        print(f"–ö—É—Ä—å–µ—Ä {courier_name} (–ø—É—Å—Ç–æ–π): –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –Ω–∞ —Ç–∏–ø—ã –±—É—Ç—ã–ª–æ–∫", file=sys.stderr)

# –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç—å –¥–ª—è –æ–±—â–µ–π –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –∫—É—Ä—å–µ—Ä–æ–≤
routing.AddDimensionWithVehicleCapacity(
    total_bottles_callback_index,
    0,  # no slack
    courier_capacities,  # –æ–±—â–∞—è –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –∫–∞–∂–¥–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞
    True,
    "TotalBottles"
)

# –î–æ–±–∞–≤–ª—è–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ
for vehicle_id in range(num_couriers):
    routing.AddDimension(
        transit_callback_index,
        0,  # no slack
        50000,  # –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ –∫—É—Ä—å–µ—Ä–∞ (50 –∫–º)
        True,  # start cumul to zero
        f"Distance_{vehicle_id}"
    )

# –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç—å –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –∑–∞–∫–∞–∑–æ–≤
routing.AddDimension(
    unit_callback_index,
    0,  # no slack
    max_orders_per_courier + 1,  # –º–∞–∫—Å–∏–º—É–º –∑–∞–∫–∞–∑–æ–≤ –Ω–∞ –∫—É—Ä—å–µ—Ä–∞ + –∞–∫—Ç–∏–≤–Ω—ã–π –∑–∞–∫–∞–∑
    True,  # start cumul to zero
    "OrderCount"
)

# –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç—å –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
order_count_dimension = routing.GetDimensionOrDie("OrderCount")

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞
for vehicle_id in range(num_couriers):
    # –£—á–∏—Ç—ã–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∑–∞–∫–∞–∑ –ø—Ä–∏ —Ä–∞—Å—á–µ—Ç–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
    has_active_order = (couriers[vehicle_id].get("order") and 
                       couriers[vehicle_id]["order"].get("status") == "onTheWay")
    
    # –£–±–∏—Ä–∞–µ–º –∂–µ—Å—Ç–∫–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è - —Ç–µ–ø–µ—Ä—å –∫—É—Ä—å–µ—Ä –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –æ—Ç 0 –¥–æ –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤
    # –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –±—É—Ç—ã–ª–æ–∫
    min_orders = 0  # –ú–∏–Ω–∏–º—É–º 0 - –∫—É—Ä—å–µ—Ä –º–æ–∂–µ—Ç –Ω–µ –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑—ã
    max_orders = new_orders_count + (1 if has_active_order else 0)  # –ú–∞–∫—Å–∏–º—É–º - –≤—Å–µ –∑–∞–∫–∞–∑—ã
    
    # –î–µ–ª–∞–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –æ—á–µ–Ω—å –º—è–≥–∫–∏–º–∏ (–ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ —É–±–∏—Ä–∞–µ–º)
    order_count_dimension.SetCumulVarSoftLowerBound(
        routing.End(vehicle_id), 
        min_orders, 
        100  # –û—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫–∏–π —à—Ç—Ä–∞—Ñ
    )
    
    order_count_dimension.SetCumulVarSoftUpperBound(
        routing.End(vehicle_id), 
        max_orders, 
        100  # –û—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫–∏–π —à—Ç—Ä–∞—Ñ
    )
    
    print(f"–ö—É—Ä—å–µ—Ä {vehicle_id}: –≥–∏–±–∫–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è {min_orders}-{max_orders} –∑–∞–∫–∞–∑–æ–≤ (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç - –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –±—É—Ç—ã–ª–æ–∫)", file=sys.stderr)

# –®—Ç—Ä–∞—Ñ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫—É—Ä—å–µ—Ä–∞ - —É–º–µ–Ω—å—à–∞–µ–º
for vehicle_id in range(num_couriers):
    routing.SetFixedCostOfVehicle(1000, vehicle_id)  # –£–º–µ–Ω—å—à–∞–µ–º —à—Ç—Ä–∞—Ñ

# –ü–ê–†–ê–ú–ï–¢–†–´ –ü–û–ò–°–ö–ê - –¥–µ–ª–∞–µ–º –±–æ–ª–µ–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–º–∏
search_params = pywrapcp.DefaultRoutingSearchParameters()
search_params.first_solution_strategy = routing_enums_pb2.FirstSolutionStrategy.AUTOMATIC  # –ò–∑–º–µ–Ω—è–µ–º —Å—Ç—Ä–∞—Ç–µ–≥–∏—é
search_params.local_search_metaheuristic = routing_enums_pb2.LocalSearchMetaheuristic.AUTOMATIC  # –ò–∑–º–µ–Ω—è–µ–º –º–µ—Ç–æ–¥
search_params.time_limit.seconds = 30  # –£–º–µ–Ω—å—à–∞–µ–º –≤—Ä–µ–º—è
search_params.solution_limit = 50  # –£–º–µ–Ω—å—à–∞–µ–º –ª–∏–º–∏—Ç —Ä–µ—à–µ–Ω–∏–π

print("–ù–∞—á–∏–Ω–∞–µ–º —Ä–µ—à–µ–Ω–∏–µ —Å –æ—Ç–∫—Ä—ã—Ç—ã–º–∏ –º–∞—Ä—à—Ä—É—Ç–∞–º–∏ –∏ —É—á–µ—Ç–æ–º –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤...", file=sys.stderr)
print("–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞:", file=sys.stderr)
print(f"  –°—Ç—Ä–∞—Ç–µ–≥–∏—è –ø–µ—Ä–≤–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è: AUTOMATIC", file=sys.stderr)
print(f"  –ú–µ—Ç–æ–¥ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞: AUTOMATIC", file=sys.stderr)
print(f"  –õ–∏–º–∏—Ç –≤—Ä–µ–º–µ–Ω–∏: 30 —Å–µ–∫—É–Ω–¥", file=sys.stderr)
print(f"  –õ–∏–º–∏—Ç —Ä–µ—à–µ–Ω–∏–π: 50", file=sys.stderr)

solution = routing.SolveWithParameters(search_params)

# –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
print(f"–†–µ—à–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ: {solution is not None}", file=sys.stderr)
if solution:
    print(f"–°—Ç–∞—Ç—É—Å —Ä–µ—à–µ–Ω–∏—è: {routing.status()}", file=sys.stderr)

if solution:
    print("\n=== –û–¢–ö–†–´–¢–´–ï –ú–ê–†–®–†–£–¢–´ –ù–ê–ô–î–ï–ù–´ ===", file=sys.stderr)
    print(f"–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {solution.ObjectiveValue()} –º–µ—Ç—Ä–æ–≤", file=sys.stderr)
    print(f"–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å (–±–µ–∑ –±–∞–∑–æ–≤—ã—Ö –∑–∞—Ç—Ä–∞—Ç): {solution.ObjectiveValue() - num_couriers * 5000} –º–µ—Ç—Ä–æ–≤", file=sys.stderr)
    print(f"–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {(solution.ObjectiveValue() - num_couriers * 5000)/1000:.2f} –∫–º", file=sys.stderr)
    
    routes = []
    total_distance = 0
    active_couriers = 0
    
    for vehicle_id in range(num_couriers):
        index = routing.Start(vehicle_id)
        route_distance = 0
        route_orders = []
        
        print(f"\n–ú–∞—Ä—à—Ä—É—Ç –∫—É—Ä—å–µ—Ä–∞ {couriers[vehicle_id]['id']}:", file=sys.stderr)
        print(f"  –°—Ç–∞—Ä—Ç: ({couriers[vehicle_id]['lat']}, {couriers[vehicle_id]['lon']})", file=sys.stderr)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–π –∑–∞–∫–∞–∑
        has_active_order = (couriers[vehicle_id].get("order") and 
                           couriers[vehicle_id]["order"].get("status") == "onTheWay")
        
        while not routing.IsEnd(index):
            node_index = manager.IndexToNode(index)
            
            if node_index == 0:
                print(f"  -> –î–µ–ø–æ: ({common_depot['lat']}, {common_depot['lon']})", file=sys.stderr)
            elif node_index >= num_couriers + 1 and node_index < num_locations:
                order = orders[node_index - num_couriers - 1]
                route_orders.append(order["id"])
                
                # –û—Ç–º–µ—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã
                if has_active_order and order["id"] == couriers[vehicle_id]["order"]["orderId"]:
                    print(f"  -> –ó–∞–∫–∞–∑ {order['id']}: ({order['lat']}, {order['lon']}) [–ê–ö–¢–ò–í–ù–´–ô]", file=sys.stderr)
                else:
                    print(f"  -> –ó–∞–∫–∞–∑ {order['id']}: ({order['lat']}, {order['lon']}) [–ù–û–í–´–ô]", file=sys.stderr)
            elif node_index >= num_locations:
                print(f"  -> –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞", file=sys.stderr)
            
            previous_index = index
            index = solution.Value(routing.NextVar(index))
            
            if not routing.IsEnd(index):
                route_distance += routing.GetArcCostForVehicle(previous_index, index, vehicle_id)
        
        if route_orders:
            # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –±—É—Ç—ã–ª–∫–∏ –¥–ª—è —ç—Ç–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞
            total_bottles_12 = 0
            total_bottles_19 = 0
            total_bottles = 0
            
            for order_id in route_orders:
                order_data = next((o for o in orders if o["id"] == order_id), None)
                if order_data:
                    bottles_12 = order_data.get("bottles_12") or 0
                    bottles_19 = order_data.get("bottles_19") or 0
                    total_bottles_12 += bottles_12
                    total_bottles_19 += bottles_19
                    total_bottles += bottles_12 + bottles_19
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫—É—Ä—å–µ—Ä–µ
            courier = couriers[vehicle_id]
            courier_type = courier_types[vehicle_id]
            courier_capacity_12 = courier.get("capacity_12", 0)
            courier_capacity_19 = courier.get("capacity_19", 0)
            courier_name = courier.get("id", "")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
            has_special_restrictions = courier_name in COURIER_SPECIAL_RESTRICTIONS
            if has_special_restrictions:
                special_restrictions = COURIER_SPECIAL_RESTRICTIONS[courier_name]
                max_bottles_12 = special_restrictions["max_bottles_12"]
                max_bottles_19 = special_restrictions["max_bottles_19"]
                reason = special_restrictions["reason"]
                
                print(f"  –¢–∏–ø –∫—É—Ä—å–µ—Ä–∞: –°–ü–ï–¶–ò–ê–õ–¨–ù–´–ï –û–ì–†–ê–ù–ò–ß–ï–ù–ò–Ø", file=sys.stderr)
                print(f"  –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è: {reason}", file=sys.stderr)
                print(f"  –õ–∏–º–∏—Ç—ã: 12–ª‚â§{max_bottles_12}, 19–ª‚â§{max_bottles_19}", file=sys.stderr)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–±–ª—é–¥–µ–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
                if total_bottles_12 > max_bottles_12:
                    print(f"  üö´ –ù–ê–†–£–®–ï–ù–ò–ï: –¢—Ä–µ–±—É–µ—Ç—Å—è 12–ª={total_bottles_12}, –Ω–æ –ª–∏–º–∏—Ç {max_bottles_12}", file=sys.stderr)
                if total_bottles_19 > max_bottles_19:
                    print(f"  üö´ –ù–ê–†–£–®–ï–ù–ò–ï: –¢—Ä–µ–±—É–µ—Ç—Å—è 19–ª={total_bottles_19}, –Ω–æ –ª–∏–º–∏—Ç {max_bottles_19}", file=sys.stderr)
                
                # –î–ª—è –∫—É—Ä—å–µ—Ä–æ–≤ —Å–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –Ω—É–∂–Ω–æ –≤–∑—è—Ç—å –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –ª–∏–º–∏—Ç–æ–≤
                if courier_type == 'empty':
                    courier_should_take = {
                        "bottles_12": min(total_bottles_12, max_bottles_12),
                        "bottles_19": min(total_bottles_19, max_bottles_19),
                        "total": min(total_bottles_12, max_bottles_12) + min(total_bottles_19, max_bottles_19)
                    }
                    courier_total_capacity = courier.get("capacity", 100)
                else:
                    # –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π –∫—É—Ä—å–µ—Ä —Å–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏
                    courier_should_take = {
                        "bottles_12": 0,  # –ù–µ –Ω—É–∂–Ω–æ –±—Ä–∞—Ç—å - —É–∂–µ –µ—Å—Ç—å
                        "bottles_19": 0,  # –ù–µ –Ω—É–∂–Ω–æ –±—Ä–∞—Ç—å - —É–∂–µ –µ—Å—Ç—å
                        "total": 0
                    }
                    courier_total_capacity = courier_capacity_12 + courier_capacity_19
                
            # –õ–æ–≥–∏–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –∫—É—Ä—å–µ—Ä–∞
            elif courier_type == 'empty':
                # –ü—É—Å—Ç–æ–π –∫—É—Ä—å–µ—Ä - –¥–æ–ª–∂–µ–Ω –≤–∑—è—Ç—å –∏–º–µ–Ω–Ω–æ —Ç–æ, —á—Ç–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è –∑–∞–∫–∞–∑–æ–≤
                bottles_12_needed = total_bottles_12
                bottles_19_needed = total_bottles_19
                courier_total_capacity = courier.get("capacity", 100)
                
                print(f"  –¢–∏–ø –∫—É—Ä—å–µ—Ä–∞: –ü–£–°–¢–û–ô", file=sys.stderr)
                print(f"  –ö—É—Ä—å–µ—Ä –¥–æ–ª–∂–µ–Ω –≤–∑—è—Ç—å: 12–ª={bottles_12_needed}, 19–ª={bottles_19_needed}", file=sys.stderr)
                
                # –î–ª—è –ø—É—Å—Ç—ã—Ö –∫—É—Ä—å–µ—Ä–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –Ω—É–∂–Ω–æ –≤–∑—è—Ç—å
                courier_should_take = {
                    "bottles_12": bottles_12_needed,
                    "bottles_19": bottles_19_needed,
                    "total": bottles_12_needed + bottles_19_needed
                }
                
            else:
                # –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π –∫—É—Ä—å–µ—Ä - –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–º–µ—é—â–∏–µ—Å—è –±—É—Ç—ã–ª–∫–∏, –ù–ï –ø–æ–∫–∞–∑—ã–≤–∞–µ–º "—Å–∫–æ–ª—å–∫–æ –≤–∑—è—Ç—å"
                courier_total_capacity = courier_capacity_12 + courier_capacity_19
                
                print(f"  –¢–∏–ø –∫—É—Ä—å–µ—Ä–∞: –ó–ê–ì–†–£–ñ–ï–ù–ù–´–ô", file=sys.stderr)
                print(f"  –ò–º–µ—é—â–∏–µ—Å—è –±—É—Ç—ã–ª–∫–∏: 12–ª={courier_capacity_12}, 19–ª={courier_capacity_19}", file=sys.stderr)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç—å –±—É—Ç—ã–ª–æ–∫
                if total_bottles_12 > courier_capacity_12:
                    print(f"  ‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –¢—Ä–µ–±—É–µ—Ç—Å—è 12–ª={total_bottles_12}, –Ω–æ —É –∫—É—Ä—å–µ—Ä–∞ —Ç–æ–ª—å–∫–æ {courier_capacity_12}", file=sys.stderr)
                if total_bottles_19 > courier_capacity_19:
                    print(f"  ‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –¢—Ä–µ–±—É–µ—Ç—Å—è 19–ª={total_bottles_19}, –Ω–æ —É –∫—É—Ä—å–µ—Ä–∞ —Ç–æ–ª—å–∫–æ {courier_capacity_19}", file=sys.stderr)
                
                # –î–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –∫—É—Ä—å–µ—Ä–æ–≤ –ù–ï –ø–æ–∫–∞–∑—ã–≤–∞–µ–º "—Å–∫–æ–ª—å–∫–æ –≤–∑—è—Ç—å" - –æ–Ω–∏ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
                courier_should_take = {
                    "bottles_12": 0,  # –ù–µ –Ω—É–∂–Ω–æ –±—Ä–∞—Ç—å - —É–∂–µ –µ—Å—Ç—å
                    "bottles_19": 0,  # –ù–µ –Ω—É–∂–Ω–æ –±—Ä–∞—Ç—å - —É–∂–µ –µ—Å—Ç—å
                    "total": 0
                }
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â—É—é –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å
            if total_bottles > courier_total_capacity:
                print(f"  ‚ùå –û–®–ò–ë–ö–ê: –¢—Ä–µ–±—É–µ—Ç—Å—è {total_bottles} –±—É—Ç—ã–ª–æ–∫, –Ω–æ –æ–±—â–∞—è –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å {courier_total_capacity}", file=sys.stderr)
            
            print(f"  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤: {len(route_orders)}", file=sys.stderr)
            print(f"  –¢—Ä–µ–±—É–µ—Ç—Å—è –±—É—Ç—ã–ª–æ–∫: 12–ª={total_bottles_12}, 19–ª={total_bottles_19}, –≤—Å–µ–≥–æ={total_bottles}", file=sys.stderr)
            print(f"  –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏: {100*total_bottles/max(courier_total_capacity,1):.1f}%", file=sys.stderr)
            
            total_distance += route_distance
            active_couriers += 1
            
            route_info = {
                "courier_id": couriers[vehicle_id]["id"],
                "orders": route_orders,
                "orders_count": len(route_orders),
                "distance_meters": route_distance,
                "distance_km": round(route_distance/1000, 2),
                "required_bottles": {
                    "bottles_12": total_bottles_12,
                    "bottles_19": total_bottles_19,
                    "total": total_bottles
                },
                "courier_should_take": courier_should_take,
                "capacity_utilization": {
                    "percent": round(100 * total_bottles / max(courier_total_capacity, 1), 1)
                },
                "has_active_order": has_active_order,
                "courier_type": courier_type
            }
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è—Ö
            if has_special_restrictions:
                route_info["special_restrictions"] = {
                    "max_bottles_12": max_bottles_12,
                    "max_bottles_19": max_bottles_19,
                    "reason": reason,
                    "violations": {
                        "bottles_12": max(0, total_bottles_12 - max_bottles_12),
                        "bottles_19": max(0, total_bottles_19 - max_bottles_19)
                    }
                }
            
            routes.append(route_info)
        else:
            print(f"  –ù–µ—Ç –∑–∞–∫–∞–∑–æ–≤", file=sys.stderr)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫—É
    orders_counts = [len(route["orders"]) for route in routes]
    max_orders = max(orders_counts) if orders_counts else 0
    min_orders = min(orders_counts) if orders_counts else 0
    balance_score = max_orders - min_orders
    
    print(f"\n=== –†–ï–ó–£–õ–¨–¢–ê–¢–´ –†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–Ø ===", file=sys.stderr)
    print(f"–û–±—â–µ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ: {total_distance} –º–µ—Ç—Ä–æ–≤ ({total_distance/1000:.2f} –∫–º)", file=sys.stderr)
    print(f"–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫—É—Ä—å–µ—Ä–æ–≤: {active_couriers} –∏–∑ {num_couriers}", file=sys.stderr)
    print(f"–í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤ –æ–±—Å–ª—É–∂–µ–Ω–æ: {sum(len(r['orders']) for r in routes)} –∏–∑ {num_orders}", file=sys.stderr)
    print(f"–ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤: {len(active_order_ids)}", file=sys.stderr)
    print(f"–ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∞ –Ω–∞–≥—Ä—É–∑–∫–∏: {balance_score} (0 = –∏–¥–µ–∞–ª—å–Ω–∞—è –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∞)", file=sys.stderr)
    print(f"–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤: {orders_counts}", file=sys.stderr)
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –±—É—Ç—ã–ª–∫–∞–º
    print(f"\n=== –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û –ë–£–¢–´–õ–ö–ê–ú ===", file=sys.stderr)
    for route in routes:
        courier_id = route["courier_id"]
        required = route["required_bottles"]
        should_take = route["courier_should_take"]
        utilization = route["capacity_utilization"]["percent"]
        active_status = " (—Å –∞–∫—Ç–∏–≤–Ω—ã–º –∑–∞–∫–∞–∑–æ–º)" if route["has_active_order"] else ""
        
        print(f"  {courier_id}{active_status}:", file=sys.stderr)
        print(f"    –¢—Ä–µ–±—É–µ—Ç—Å—è: 12–ª={required['bottles_12']}, 19–ª={required['bottles_19']}", file=sys.stderr)
        print(f"    –í–∑—è—Ç—å: 12–ª={should_take['bottles_12']}, 19–ª={should_take['bottles_19']}", file=sys.stderr)
        print(f"    –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: {utilization}%", file=sys.stderr)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–æ–±—Å–ª—É–∂–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã
    served_orders = set()
    for route in routes:
        served_orders.update(route["orders"])
    
    unserved_orders = []
    for order in orders:
        if order["id"] not in served_orders:
            unserved_orders.append(order["id"])
    
    if unserved_orders:
        print(f"–ù–µ–æ–±—Å–ª—É–∂–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã: {unserved_orders}", file=sys.stderr)
    
    print(json.dumps(routes, ensure_ascii=False))
    
else:
    print("–ú–∞—Ä—à—Ä—É—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!", file=sys.stderr)
    print("[]") 