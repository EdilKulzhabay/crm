import cron from "node-cron";
import { runDynamicZoneDistribution } from "./dynamicZoneSystem.js";
import { periodicZoneOptimization, shouldTriggerZoneSystem } from "./smartDistributionTrigger.js";
import zoneSystemMonitor from "./zoneSystemMonitor.js";
import Order from "../Models/Order.js";
import CourierAggregator from "../Models/CourierAggregator.js";
import { getTodayAlmaty } from "./dateUtils.js";

/**
 * –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–æ–Ω–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π
 */
class DynamicZoneScheduler {
    constructor() {
        this.isRunning = false;
        this.tasks = [];
        this.stats = {
            totalDistributions: 0,
            successfulDistributions: 0,
            lastDistribution: null,
            avgProcessingTime: 0
        };
    }

    /**
     * –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
     */
    start() {
        if (this.isRunning) {
            console.log("‚ö†Ô∏è –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —É–∂–µ –∑–∞–ø—É—â–µ–Ω");
            return;
        }

        console.log("üöÄ –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –∑–æ–Ω–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã");
        this.isRunning = true;

        // –û—Å–Ω–æ–≤–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ - –∫–∞–∂–¥—ã–µ 2 –º–∏–Ω—É—Ç—ã
        this.tasks.push(
            cron.schedule("* * * * *", async () => {
                await this.executeMainDistribution();
            }, {
                scheduled: true,
                timezone: "Asia/Almaty"
            })
        );

        // –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ - –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
        this.tasks.push(
            cron.schedule("*/30 * * * *", async () => {
                await this.quickCheck();
            }, {
                scheduled: true,
                timezone: "Asia/Almaty"
            })
        );

        // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–æ–Ω - –∫–∞–∂–¥—ã–µ 15 –º–∏–Ω—É—Ç
        this.tasks.push(
            cron.schedule("*/15 * * * *", async () => {
                await this.executeZoneOptimization();
            }, {
                scheduled: true,
                timezone: "Asia/Almaty"
            })
        );

        // –°–±—Ä–æ—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫—É—Ä—å–µ—Ä–æ–≤ - –∫–∞–∂–¥—ã–π —á–∞—Å
        this.tasks.push(
            cron.schedule("0 * * * *", async () => {
                await this.resetCourierStats();
            }, {
                scheduled: true,
                timezone: "Asia/Almaty"
            })
        );

        // –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö - –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 2:00
        this.tasks.push(
            cron.schedule("0 2 * * *", async () => {
                await this.cleanupOldData();
            }, {
                scheduled: true,
                timezone: "Asia/Almaty"
            })
        );

        // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–æ–≤ - –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 6:00
        this.tasks.push(
            cron.schedule("0 6 * * *", async () => {
                await this.generateDailyReport();
            }, {
                scheduled: true,
                timezone: "Asia/Almaty"
            })
        );

        console.log(`‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–ø—É—â–µ–Ω —Å ${this.tasks.length} –∑–∞–¥–∞—á–∞–º–∏`);
    }

    /**
     * –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
     */
    stop() {
        if (!this.isRunning) {
            console.log("‚ö†Ô∏è –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω");
            return;
        }

        console.log("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞");
        this.tasks.forEach(task => task.destroy());
        this.tasks = [];
        this.isRunning = false;
        console.log("‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω");
    }

    /**
     * –û—Å–Ω–æ–≤–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤
     */
    async executeMainDistribution() {
        try {
            const startTime = Date.now();
            console.log("üîÑ –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤");

            const check = await shouldTriggerZoneSystem();
            
            if (check.shouldTrigger) {
                this.stats.totalDistributions++;
                const result = await runDynamicZoneDistribution();
                
                if (result && result.success) {
                    this.stats.successfulDistributions++;
                    this.stats.lastDistribution = new Date();
                    
                    const processingTime = Date.now() - startTime;
                    this.stats.avgProcessingTime = 
                        (this.stats.avgProcessingTime + processingTime) / 2;
                    
                    console.log(`‚úÖ –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –∑–∞ ${processingTime}–º—Å`);
                    console.log(`üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${result.processedOrders} –∑–∞–∫–∞–∑–æ–≤, ${result.assignedCouriers} –∫—É—Ä—å–µ—Ä–æ–≤`);
                } else {
                    console.log("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–æ–≤");
                }
            } else {
                console.log(`‚ÑπÔ∏è –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ: ${check.reason}`);
                console.log(`üìä –ù–µ–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤: ${check.unassignedOrders}, –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫—É—Ä—å–µ—Ä–æ–≤: ${check.activeCouriers}`);
            }

        } catch (error) {
            console.error("‚ùå –û—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏:", error);
        }
    }

    /**
     * –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–∏—Ç—É–∞—Ü–∏–π
     */
    async quickCheck() {
        try {
            const today = getTodayAlmaty();
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–∫–∞–∑—ã, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–≥–æ –∂–¥—É—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
            const oldUnassignedOrders = await Order.find({
                "date.d": today,
                status: { $nin: ["delivered", "cancelled", "onTheWay"] },
                courierAggregator: { $exists: false },
                createdAt: { $lt: new Date(Date.now() - 10 * 60 * 1000) } // —Å—Ç–∞—Ä—à–µ 10 –º–∏–Ω—É—Ç
            });

            if (oldUnassignedOrders.length > 0) {
                console.log(`‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ ${oldUnassignedOrders.length} –∑–∞–∫–∞–∑–æ–≤, –æ–∂–∏–¥–∞—é—â–∏—Ö –±–æ–ª–µ–µ 10 –º–∏–Ω—É—Ç`);
                
                // –ó–∞–ø—É—Å–∫–∞–µ–º —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ
                const result = await runDynamicZoneDistribution();
                if (result && result.success) {
                    console.log("üö® –≠–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ");
                }
            }

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—É—Ä—å–µ—Ä–æ–≤ –±–µ–∑ –∑–∞–∫–∞–∑–æ–≤
            const idleCouriers = await CourierAggregator.countDocuments({
                onTheLine: true,
                status: "active",
                orders: { $size: 0 }
            });

            if (idleCouriers > 3) {
                console.log(`üë• ${idleCouriers} –∫—É—Ä—å–µ—Ä–æ–≤ –±–µ–∑ –∑–∞–∫–∞–∑–æ–≤ - –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è`);
            }

        } catch (error) {
            console.error("‚ùå –û—à–∏–±–∫–∞ –≤ –±—ã—Å—Ç—Ä–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ:", error);
        }
    }

    /**
     * –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–æ–Ω
     */
    async executeZoneOptimization() {
        try {
            console.log("üîß –ó–∞–ø—É—Å–∫ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∑–æ–Ω");
            await periodicZoneOptimization();
        } catch (error) {
            console.error("‚ùå –û—à–∏–±–∫–∞ –≤ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∑–æ–Ω:", error);
        }
    }

    /**
     * –°–±—Ä–æ—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫—É—Ä—å–µ—Ä–æ–≤
     */
    async resetCourierStats() {
        try {
            console.log("üîÑ –°–±—Ä–æ—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫—É—Ä—å–µ—Ä–æ–≤");
            
            const result = await CourierAggregator.updateMany(
                {},
                {
                    $set: {
                        "stats.dailyOrders": 0,
                        "stats.dailyEarnings": 0,
                        "stats.lastResetTime": new Date()
                    }
                }
            );

            console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è ${result.modifiedCount} –∫—É—Ä—å–µ—Ä–æ–≤`);
        } catch (error) {
            console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:", error);
        }
    }

    /**
     * –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö
     */
    async cleanupOldData() {
        try {
            console.log("üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö");
            
            const weekAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000);
            
            // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞–∫–∞–∑—ã —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º "delivered" –∏–ª–∏ "cancelled"
            const cleanupResult = await Order.deleteMany({
                status: { $in: ["delivered", "cancelled"] },
                updatedAt: { $lt: weekAgo }
            });

            console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ ${cleanupResult.deletedCount} —Å—Ç–∞—Ä—ã—Ö –∑–∞–∫–∞–∑–æ–≤`);

            // –û—á–∏—â–∞–µ–º –ª–æ–≥–∏ —Å—Ç–∞—Ä—à–µ –º–µ—Å—è—Ü–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å –∫–æ–ª–ª–µ–∫—Ü–∏—è –ª–æ–≥–æ–≤)
            const monthAgo = new Date(Date.now() - 30 * 24 * 60 * 60 * 1000);
            
            console.log("‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞");
        } catch (error) {
            console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö:", error);
        }
    }

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
     */
    async generateDailyReport() {
        try {
            console.log("üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞");
            
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏—Å—Ç–µ–º—É –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
            const detailedReport = await zoneSystemMonitor.generateDetailedReport();
            
            if (detailedReport) {
                // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–µ
                console.log(`üîÑ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞:`);
                console.log(`   –í—Å–µ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π: ${this.stats.totalDistributions}`);
                console.log(`   –£—Å–ø–µ—à–Ω—ã—Ö —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π: ${this.stats.successfulDistributions}`);
                console.log(`   –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞: ${this.stats.totalDistributions > 0 ? 
                    ((this.stats.successfulDistributions / this.stats.totalDistributions) * 100).toFixed(1) : 0}%`);
                console.log(`   –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: ${this.stats.avgProcessingTime.toFixed(0)}–º—Å`);
                
                return detailedReport;
            } else {
                // Fallback –∫ —Å—Ç–∞—Ä–æ–º—É –º–µ—Ç–æ–¥—É –µ—Å–ª–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
                const today = getTodayAlmaty();
                const yesterday = new Date(Date.now() - 24 * 60 * 60 * 1000 + (6 * 60 * 60 * 1000)).toISOString().split('T')[0]; // –í—á–µ—Ä–∞ –ø–æ –ê–ª–º–∞—Ç—ã

                const todayOrders = await Order.countDocuments({ "date.d": today });
                const yesterdayOrders = await Order.countDocuments({ "date.d": yesterday });
                
                const deliveredToday = await Order.countDocuments({
                    "date.d": today,
                    status: "delivered"
                });

                const cancelledToday = await Order.countDocuments({
                    "date.d": today,
                    status: "cancelled"
                });

                const activeCouriers = await CourierAggregator.countDocuments({
                    onTheLine: true,
                    status: "active"
                });

                const totalCouriers = await CourierAggregator.countDocuments({
                    status: "active"
                });

                const successRate = todayOrders > 0 ? (deliveredToday / todayOrders) * 100 : 0;
                const distributionEfficiency = this.stats.totalDistributions > 0 ? 
                    (this.stats.successfulDistributions / this.stats.totalDistributions) * 100 : 0;

                console.log("\nüìà –ï–ñ–ï–î–ù–ï–í–ù–´–ô –û–¢–ß–ï–¢");
                console.log("=".repeat(50));
                console.log(`üì¶ –ó–∞–∫–∞–∑—ã —Å–µ–≥–æ–¥–Ω—è: ${todayOrders} (–≤—á–µ—Ä–∞: ${yesterdayOrders})`);
                console.log(`‚úÖ –î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ: ${deliveredToday} (${successRate.toFixed(1)}%)`);
                console.log(`‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ: ${cancelledToday}`);
                console.log(`üë• –ê–∫—Ç–∏–≤–Ω—ã—Ö –∫—É—Ä—å–µ—Ä–æ–≤: ${activeCouriers}/${totalCouriers}`);
                console.log(`üéØ –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è: ${distributionEfficiency.toFixed(1)}%`);
                console.log(`‚è±Ô∏è –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: ${this.stats.avgProcessingTime.toFixed(0)}–º—Å`);
                console.log(`üîÑ –í—Å–µ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π: ${this.stats.totalDistributions}`);
                console.log("=".repeat(50));
            }

        } catch (error) {
            console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞:", error);
        }
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
     */
    getStats() {
        return {
            ...this.stats,
            isRunning: this.isRunning,
            activeTasks: this.tasks.length,
            uptime: this.isRunning ? Date.now() - this.stats.lastDistribution : 0
        };
    }

    /**
     * –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
     */
    async manualDistribution() {
        console.log("üîß –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è");
        return await this.executeMainDistribution();
    }
}

// –°–æ–∑–¥–∞–µ–º –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
const dynamicZoneScheduler = new DynamicZoneScheduler();

export default dynamicZoneScheduler; 