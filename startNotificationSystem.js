#!/usr/bin/env node

import mongoose from 'mongoose';
import { autoTriggerManager } from './notificationManager.js';

/**
 * üöÄ –ó–ê–ü–£–°–ö –°–ò–°–¢–ï–ú–´ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–• –£–í–ï–î–û–ú–õ–ï–ù–ò–ô
 * 
 * –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç:
 * 1. –ü–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ MongoDB
 * 2. –ó–∞–ø—É—Å–∫–∞–µ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
 * 3. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é –º–∞—Ä—à—Ä—É—Ç–æ–≤ –ø—Ä–∏:
 *    - –ü–æ—è–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤ —Å forAggregator: true
 *    - –í—ã—Ö–æ–¥–µ –∫—É—Ä—å–µ—Ä–∞ –Ω–∞ –ª–∏–Ω–∏—é (onTheLine: true)
 *    - –ó–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞ –∫—É—Ä—å–µ—Ä–æ–º
 * 4. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫—É—Ä—å–µ—Ä–∞–º –ø–æ—Å–ª–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
 */

async function startSystem() {
    try {
        console.log("üöÄ –ó–ê–ü–£–°–ö –°–ò–°–¢–ï–ú–´ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–• –£–í–ï–î–û–ú–õ–ï–ù–ò–ô");
        console.log("=".repeat(60));
        console.log("üìÖ –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞:", new Date().toLocaleString('ru-RU', { timeZone: 'Asia/Almaty' }));
        console.log("=".repeat(60));

        // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
        console.log("üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB...");
        await mongoose.connect('mongodb://127.0.0.1:27017/crm');
        console.log("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ");

        // –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        console.log("üîç –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...");
        await autoTriggerManager.startDatabaseMonitoring();

        // –ó–∞–ø—É—Å–∫ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
        console.log("üó∫Ô∏è –ó–∞–ø—É—Å–∫ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏...");
        await autoTriggerManager.triggerOptimizationAndNotifications("system_startup");

        console.log("=".repeat(60));
        console.log("‚úÖ –°–ò–°–¢–ï–ú–ê –ó–ê–ü–£–©–ï–ù–ê –ò –ì–û–¢–û–í–ê –ö –†–ê–ë–û–¢–ï");
        console.log("=".repeat(60));
        console.log("üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∞–∫—Ç–∏–≤–µ–Ω –¥–ª—è —Å–ª–µ–¥—É—é—â–∏—Ö —Å–æ–±—ã—Ç–∏–π:");
        console.log("   üì¶ –ù–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã —Å forAggregator: true");
        console.log("   üë§ –ö—É—Ä—å–µ—Ä—ã –≤—ã—Ö–æ–¥—è—Ç –Ω–∞ –ª–∏–Ω–∏—é (onTheLine: true)");
        console.log("   ‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ –∫—É—Ä—å–µ—Ä–∞–º–∏");
        console.log("=".repeat(60));
        console.log("üîÑ –°–∏—Å—Ç–µ–º–∞ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –¥–æ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞");
        console.log("   –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C");
        console.log("=".repeat(60));

    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã:", error);
        process.exit(1);
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
process.on('SIGINT', async () => {
    console.log("\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...");
    console.log("üîå –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB...");
    
    try {
        await mongoose.disconnect();
        console.log("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB –∑–∞–∫—Ä—ã—Ç–æ");
        console.log("üëã –°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞");
        process.exit(0);
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏:", error);
        process.exit(1);
    }
});

process.on('SIGTERM', async () => {
    console.log("\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...");
    await mongoose.disconnect();
    console.log("‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞");
    process.exit(0);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
process.on('unhandledRejection', (reason, promise) => {
    console.error('‚ùå –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ Promise:', reason);
    console.error('Promise:', promise);
});

process.on('uncaughtException', (error) => {
    console.error('‚ùå –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ:', error);
    process.exit(1);
});

// –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã
startSystem(); 