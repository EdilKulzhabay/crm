import queueOrTools, { getQueueStatus, clearQueue } from './orToolsQueue.js';

async function testQueue() {
    console.log("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—á–µ—Ä–µ–¥–∏ orTools...\n");
    
    // –û—á–∏—â–∞–µ–º –æ—á–µ—Ä–µ–¥—å –ø–µ—Ä–µ–¥ —Ç–µ—Å—Ç–æ–º
    clearQueue();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å
    console.log("üìä –ù–∞—á–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å –æ—á–µ—Ä–µ–¥–∏:", getQueueStatus());
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
    console.log("\nüöÄ –î–æ–±–∞–≤–ª—è–µ–º 3 –∑–∞–ø—Ä–æ—Å–∞ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ...");
    
    const promises = [
        queueOrTools('test_1'),
        queueOrTools('test_2'),
        queueOrTools('test_3')
    ];
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    setTimeout(() => {
        console.log("üìä –°—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤:", getQueueStatus());
    }, 100);
    
    try {
        // –ñ–¥–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
        const results = await Promise.all(promises);
        console.log("\n‚úÖ –í—Å–µ –∑–∞–ø—Ä–æ—Å—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!");
        console.log("üìä –§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å –æ—á–µ—Ä–µ–¥–∏:", getQueueStatus());
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤:", error);
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testQueue().catch(console.error); 